{
  "mappings": {
    "quantum": {
      "nodes": {
        "Attribute": {
          "colName": "Name",
          "colId": "ID",
          "exportedFields": [
            "",
            "AuthoringToolsUDA",
            "CFIHOSCode",
            "CFIHOSName",
            "DataType",
            "Definition",
            "DefinitionSource",
            "Grouping",
            "ICAPSCode",
            "ICAPSName",
            "ID",
            "Name",
            "PCACode",
            "PCAName",
            "Quantifier",
            "SAPCode",
            "SAPName"
          ],
          "label": "Attribute",
          "source": "MDM_Quantum#tblAttribute",
          "name": "MDM_Quantum_tblAttribute_Attribute",
          "type": "node",
          "mappingset": "quantum"
        },
        "AttributePickListValue": {
          "colName": "Name",
          "colId": "ID",
          "exportedFields": [
            "",
            "",
            "CFIHOSCode",
            "CFIHOSName",
            "CTGCode",
            "CTGNameEN",
            "Code",
            "CodeSource",
            "Description",
            "DescriptionSource",
            "ID",
            "IFCCode",
            "IFCName",
            "ISO14224Code",
            "ISO14224Name",
            "Name"
          ],
          "label": "AttributePickListValue",
          "source": "MDM_Quantum#tblAttributePickListValue",
          "name": "MDM_Quantum_tblAttributePickListValue_AttributePickListValue",
          "type": "node",
          "mappingset": "quantum"
        },
        "Discipline": {
          "colName": "Name",
          "colId": "ID",
          "exportedFields": [
            "",
            "CFIHOSCode",
            "CFIHOSDisciplineCode",
            "CFIHOSName",
            "Code",
            "Description",
            "DocumentDisciplineCode",
            "DocumentDisciplineName",
            "DocumentDisciplineSource",
            "EPCode",
            "EPKMCode",
            "EPKMName",
            "EPName",
            "ID",
            "Name",
            "RCCode",
            "RCKMCode",
            "RCKMName",
            "RCName"
          ],
          "label": "Discipline",
          "source": "MDM_Quantum#tblDiscipline",
          "name": "MDM_Quantum_tblDiscipline_Discipline",
          "type": "node",
          "mappingset": "quantum"
        },
        "FunctionalClass": {
          "colName": "Name",
          "colId": "ID",
          "exportedFields": [
            "",
            "",
            "AbstractClass",
            "CFIHOSCode",
            "CFIHOSName",
            "CTGCode",
            "CTGNameDE",
            "CTGNameEN",
            "CTGNameFR",
            "CTGNameSP",
            "CodeEP",
            "CodeRC",
            "Definition",
            "DefinitionSource",
            "DisciplineID",
            "FunctionalClass_Hierarchy_Output",
            "ICAPSCode",
            "ICAPSName",
            "ID",
            "IFCCode",
            "IFCName",
            "ISO14224Code",
            "ISO14224Name",
            "LTTS_Status",
            "Name",
            "PCACode",
            "PCAName",
            "ParentFunctionalClassID",
            "SAPCode",
            "SAPName",
            "TagFormatID",
            "TagType",
            "Update tblFunctionalClass_Modify",
            "isEnableCode",
            "lookup_DisciplineName",
            "lookup_ParentFunctionalClassName",
            "lookup_TagFormatName"
          ],
          "label": "FunctionalClass",
          "source": "MDM_Quantum#tblFunctionalClass",
          "name": "MDM_Quantum_tblFunctionalClass_FunctionalClass",
          "type": "node",
          "mappingset": "quantum"
        },
        "PhysicalClass": {
          "colName": "Name",
          "colId": "ID",
          "exportedFields": [
            "",
            "  Set DisciplineID = '",
            "  Where ID = '",
            "AbstractClass",
            "CFIHOSCode",
            "CFIHOSName",
            "CTGCode",
            "CTGNameDE",
            "CTGNameEN",
            "CTGNameFR",
            "CTGNameSP",
            "Definition",
            "DefinitionSource",
            "DisciplineID",
            "ICAPSCode",
            "ICAPSName",
            "ID",
            "IFCCode",
            "IFCName",
            "ISO14224Code",
            "ISO14224Name",
            "IsEnableCode",
            "LTTS Status",
            "Name",
            "PCACode",
            "PCAName",
            "PIDSymbolCode",
            "ParentPhysicalClassID",
            "PhysicalClass_Hierarchy_Output",
            "SAPCode",
            "SAPName",
            "Update tblPhysicalClass_Modify",
            "lookup_DisciplineName",
            "lookup_ParentPhysicalClassName"
          ],
          "label": "PhysicalClass",
          "source": "MDM_Quantum#tblPhysicalClass",
          "name": "MDM_Quantum_tblPhysicalClass_PhysicalClass",
          "type": "node",
          "mappingset": "quantum"
        },
        "DocumentType": {
          "colName": "Name",
          "colId": "ID",
          "exportedFields": [
            "",
            "CFIHOSCode",
            "CFIHOSName",
            "Code",
            "Definition",
            "DefinitionSource",
            "EPCode",
            "EPCodeSource",
            "ID",
            "Name",
            "PCACode",
            "PCAName",
            "RCCode",
            "RCCodeSource",
            "isEnableCode"
          ],
          "label": "DocumentType",
          "source": "MDM_Quantum#tblDocumentType",
          "name": "MDM_Quantum_tblDocumentType_DocumentType",
          "type": "node",
          "mappingset": "quantum"
        },
        "DisciplineDocumentType": {
          "colName": "Name",
          "colId": "ID",
          "exportedFields": [
            "",
            "AfterProjectFormat",
            "AfterProjectLivenonlive",
            "AfterProjectWhyhaveit",
            "AsBuiltDocumentRequired",
            "CFIHOSCode",
            "CFIHOSName",
            "Definition",
            "DefinitionSource",
            "DisciplineID",
            "DocumentReviewType",
            "DocumentTypeID",
            "DuringProjectFormat",
            "DuringProjectWhyhaveit",
            "HardcopyDocumentRequired",
            "ID",
            "Name",
            "RepresentationTypeCode",
            "RequiredDuringBasic",
            "RequiredDuringCommissionning",
            "RequiredDuringDetailedDesign",
            "RequiredDuringPre_project",
            "RequiredForStartup",
            "RequiredHandoverStatusForCommissionning",
            "RequiredHandoverStatusForDetailedDesign",
            "RequiredHandoverStatusForStartup",
            "SecurityClassification",
            "StorageTypeCode",
            "TranslatedDocumentRequired",
            "lookup_DisciplineName",
            "lookup_DocumentTypeCode",
            "lookup_DocumentTypeName"
          ],
          "label": "DisciplineDocumentType",
          "source": "MDM_Quantum#tblDisciplineDocumentType",
          "name": "MDM_Quantum_tblDisciplineDocumentType_DisciplineDocumentType",
          "type": "node",
          "mappingset": "quantum"
        },
        "Tag": {
          "colName": "TagNumber",
          "colId": "ID",
          "exportedFields": [
            "",
            "CMIMSRequired",
            "FunctionalClassID",
            "ID",
            "ServiceDescription",
            "Status",
            "TagNumber",
            "ValidationStatus"
          ],
          "label": "Tag",
          "source": "ADLElginA#tblTag",
          "name": "Tag",
          "type": "node",
          "mappingset": "quantum"
        },
        "Model": {
          "colName": "ModelNumber",
          "colId": "ID",
          "exportedFields": [
            "",
            "ID",
            "ModelNumber",
            "OEMID",
            "PhysicalClassID",
            "Status"
          ],
          "label": "Model",
          "source": "ADLElginA#tblModel (2)",
          "name": "Model",
          "type": "node",
          "mappingset": "quantum"
        },
        "ModelItem": {
          "colName": "ModelID",
          "colId": "ID",
          "exportedFields": [
            "",
            "ID",
            "ModelID",
            "Name",
            "SerialNumber",
            "Status"
          ],
          "label": "ModelItem",
          "source": "ADLElginA#tblModelItem (2)",
          "name": "ModelItem",
          "type": "node",
          "mappingset": "quantum"
        }
      },
      "relations": {
        "Discipline-hasDocument->DocumentType": {
          "source": "MDM_Quantum#tblDisciplineDocumentType",
          "name": "Discipline-hasDocument->DocumentType",
          "colFromId": "DisciplineID",
          "neoFromLabel": "Discipline",
          "neoFromId": "ID",
          "colToId": "DocumentTypeID",
          "neoToLabel": "DocumentType",
          "neoToId": "ID",
          "relationType": "hasDocument",
          "mappingset": "quantum",
          "type": "relation"
        },
        "AttributePickListValue-valueFor->Attribute": {
          "source": "MDM_Quantum#tblAttribToAttribPickListValue",
          "name": "AttributePickListValue-valueFor->Attribute",
          "colFromId": "AttributePickListValueID",
          "neoFromLabel": "AttributePickListValue",
          "neoFromId": "ID",
          "colToId": "AttributeID",
          "neoToLabel": "Attribute",
          "neoToId": "ID",
          "relationType": "valueFor",
          "mappingset": "quantum",
          "type": "relation"
        },
        "Discipline-useDocumentType->DisciplineDocumentType": {
          "source": "MDM_Quantum#tblDisciplineDocumentType",
          "name": "Discipline-useDocumentType->DisciplineDocumentType",
          "colFromId": "DisciplineID",
          "neoFromLabel": "Discipline",
          "neoFromId": "ID",
          "colToId": "ID",
          "neoToLabel": "DisciplineDocumentType",
          "neoToId": "ID",
          "relationType": "useDocumentType",
          "mappingset": "quantum",
          "type": "relation"
        },
        "PhysicalClass-physicalClass2functionalClass->FunctionalClass": {
          "source": "MDM_Quantum#tblFunctionalClToPhysicalCl",
          "name": "PhysicalClass-physicalClass2functionalClass->FunctionalClass",
          "colFromId": "PhysicalClassID",
          "neoFromLabel": "PhysicalClass",
          "neoFromId": "ID",
          "colToId": "FunctionalClassID",
          "neoToLabel": "FunctionalClass",
          "neoToId": "ID",
          "relationType": "physicalClass2functionalClass",
          "mappingset": "quantum",
          "type": "relation"
        },
        "Attribute-usedBy->FunctionalClass": {
          "source": "MDM_Quantum#tblFunPhyDiscDocTyToAttribute",
          "name": "Attribute-usedBy->FunctionalClass",
          "colFromId": "AttributeID",
          "neoFromLabel": "Attribute",
          "neoFromId": "ID",
          "colToId": "FunctionalClassID",
          "neoToLabel": "FunctionalClass",
          "neoToId": "ID",
          "relationType": "usedBy",
          "mappingset": "quantum",
          "type": "relation"
        },
        "Attribute-usedBy->PhysicalClass": {
          "source": "MDM_Quantum#tblFunPhyDiscDocTyToAttribute",
          "name": "Attribute-usedBy->PhysicalClass",
          "colFromId": "AttributeID",
          "neoFromLabel": "Attribute",
          "neoFromId": "ID",
          "colToId": "PhysicalClassID",
          "neoToLabel": "PhysicalClass",
          "neoToId": "ID",
          "relationType": "usedBy",
          "mappingset": "quantum",
          "type": "relation"
        },
        "FunctionalClass-hasDocument->DisciplineDocumentType": {
          "source": "MDM_Quantum#tblFunPhyCLToDiscDocumentTy",
          "name": "FunctionalClass-hasDocument->DisciplineDocumentType",
          "colFromId": "FunctionaClassID",
          "neoFromLabel": "FunctionalClass",
          "neoFromId": "ID",
          "colToId": "DisciplineDocumentTypeID",
          "neoToLabel": "DisciplineDocumentType",
          "neoToId": "ID",
          "relationType": "hasDocument",
          "mappingset": "quantum",
          "type": "relation"
        },
        "PhysicalClass-hasDocument->DisciplineDocumentType": {
          "source": "MDM_Quantum#tblFunPhyCLToDiscDocumentTy",
          "name": "PhysicalClass-hasDocument->DisciplineDocumentType",
          "colFromId": "PhysicalClassID",
          "neoFromLabel": "PhysicalClass",
          "neoFromId": "ID",
          "colToId": "DisciplineDocumentTypeID",
          "neoToLabel": "DisciplineDocumentType",
          "neoToId": "ID",
          "relationType": "hasDocument",
          "mappingset": "quantum",
          "type": "relation"
        },
        "FunctionalClass-childOf->FunctionalClass": {
          "source": "MDM_Quantum#tblFunctionalClass",
          "name": "FunctionalClass-childOf->FunctionalClass",
          "colFromId": "ParentFunctionalClassID",
          "neoFromLabel": "FunctionalClass",
          "neoFromId": "ID",
          "colToId": "ID",
          "neoToLabel": "FunctionalClass",
          "neoToId": "ID",
          "relationType": "childOf",
          "mappingset": "quantum",
          "type": "relation"
        },
        "PhysicalClass-childOf->PhysicalClass": {
          "source": "MDM_Quantum#tblPhysicalClass",
          "name": "PhysicalClass-childOf->PhysicalClass",
          "colFromId": "ParentPhysicalClassID",
          "neoFromLabel": "PhysicalClass",
          "neoFromId": "ID",
          "colToId": "ID",
          "neoToLabel": "PhysicalClass",
          "neoToId": "ID",
          "relationType": "childOf",
          "mappingset": "quantum",
          "type": "relation"
        },
        "PhysicalClass-inDiscipline->Discipline": {
          "source": "MDM_Quantum#tblPhysicalClass",
          "name": "PhysicalClass-inDiscipline->Discipline",
          "colFromId": "ID",
          "neoFromLabel": "PhysicalClass",
          "neoFromId": "ID",
          "colToId": "DisciplineID",
          "neoToLabel": "Discipline",
          "neoToId": "ID",
          "relationType": "inDiscipline",
          "mappingset": "quantum",
          "type": "relation"
        },
        "FunctionalClass-inDiscipline->Discipline": {
          "source": "MDM_Quantum#tblFunctionalClass",
          "name": "FunctionalClass-inDiscipline->Discipline",
          "colFromId": "ID",
          "neoFromLabel": "FunctionalClass",
          "neoFromId": "ID",
          "colToId": "DisciplineID",
          "neoToLabel": "Discipline",
          "neoToId": "ID",
          "relationType": "inDiscipline",
          "mappingset": "quantum",
          "type": "relation"
        },
        "Attribute-used-by->DisciplineDocumentType": {
          "source": "MDM_Quantum#tblFunPhyDiscDocTyToAttribute",
          "name": "Attribute-used-by->DisciplineDocumentType",
          "colFromId": "AttributeID",
          "neoFromLabel": "Attribute",
          "neoFromId": "ID",
          "colToId": "DiscDocTypeID",
          "neoToLabel": "DisciplineDocumentType",
          "neoToId": "ID",
          "relationType": "used-by",
          "mappingset": "quantum",
          "type": "relation"
        },
        "Tag-fromFunctionalClass->FunctionalClass": {
          "source": "ADLElginA#tblTag",
          "name": "Tag-fromFunctionalClass->FunctionalClass",
          "colFromId": "ID",
          "neoFromLabel": "Tag",
          "neoFromId": "ID",
          "colToId": "FunctionalClassID",
          "neoToLabel": "FunctionalClass",
          "neoToId": "ID",
          "relationType": "fromFunctionalClass",
          "mappingset": "quantum",
          "type": "relation"
        },
        "Model-fromPhysicalClass->PhysicalClass": {
          "source": "ADLElginA#tblModel (2)",
          "name": "Model-fromPhysicalClass->PhysicalClass",
          "colFromId": "ID",
          "neoFromLabel": "Model",
          "neoFromId": "ID",
          "colToId": "PhysicalClassID",
          "neoToLabel": "PhysicalClass",
          "neoToId": "ID",
          "relationType": "fromPhysicalClass",
          "mappingset": "quantum",
          "type": "relation"
        },
        "ModelItem-fromModel->Model": {
          "source": "ADLElginA#tblModelItem (2)",
          "name": "ModelItem-fromModel->Model",
          "colFromId": "ModelID",
          "neoFromLabel": "ModelItem",
          "neoFromId": "ID",
          "colToId": "ID",
          "neoToLabel": "Model",
          "neoToId": "ID",
          "relationType": "fromModel",
          "mappingset": "quantum",
          "type": "relation"
        },
        "Tag-fromModelItem->ModelItem": {
          "source": "ADLElginA#tblTagToModelItem",
          "name": "Tag-fromModelItem->ModelItem",
          "colFromId": "TagID",
          "neoFromLabel": "Tag",
          "neoFromId": "ID",
          "colToId": "ModelItemID",
          "neoToLabel": "ModelItem",
          "neoToId": "ID",
          "relationType": "fromModelItem",
          "mappingset": "quantum",
          "type": "relation"
        }
      }
    },
    "ThesaurusQuantum": {
      "nodes": {
        "FunctionalClass": {
          "colName": "Name",
          "colId": "ID",
          "exportedFields": [
            "",
            "DisciplineID",
            "ID",
            "Name",
            "ParentFunctionalClassID",
            "label",
            "lookup_DisciplineName",
            "name",
            "neoId"
          ],
          "label": "FunctionalClass",
          "source": "Thesaurus-05-13#Quantum_functionalClass",
          "name": "FunctionalClass",
          "type": "node",
          "mappingset": "ThesaurusQuantum"
        },
        "Equipment": {
          "colName": "Name",
          "colId": "Id",
          "exportedFields": [
            "",
            "AltLabel",
            "ConceptTree",
            "Id",
            "Name",
            "PrefLabel"
          ],
          "label": "Equipment",
          "source": "Thesaurus-05-13#EquipmentLabel",
          "name": "Equipment",
          "type": "node",
          "mappingset": "ThesaurusQuantum"
        },
        "PhysicalClass": {
          "colName": "Name",
          "colId": "ID",
          "exportedFields": [
            "",
            "DisciplineID",
            "ID",
            "Name",
            "ParentPhysicalClassID",
            "label",
            "lookup_DisciplineName",
            "name",
            "neoId"
          ],
          "label": "PhysicalClass",
          "source": "Thesaurus-05-13#Quantum_physicalClass",
          "name": "PhysicalClass",
          "type": "node",
          "mappingset": "ThesaurusQuantum"
        },
        "Component": {
          "colName": "Name",
          "colId": "Id",
          "exportedFields": [
            "",
            "AltLabel",
            "ConceptTree",
            "Id",
            "Name",
            "PrefLabel"
          ],
          "label": "Component",
          "source": "Thesaurus-05-13#ComponentLabel",
          "name": "Component",
          "type": "node",
          "mappingset": "ThesaurusQuantum"
        }
      },
      "relations": {
        "PhysicalClass-inThesaurus->Equipment": {
          "source": "Thesaurus-05-13#CTGEquipment_QuantumPhysicalCla",
          "name": "PhysicalClass-inThesaurus->Equipment",
          "colFromId": "Source",
          "neoFromLabel": "PhysicalClass",
          "neoFromId": "ID",
          "colToId": "Destination",
          "neoToLabel": "Equipment",
          "neoToId": "Name",
          "relationType": "inThesaurus",
          "mappingset": "ThesaurusQuantum",
          "type": "relation"
        },
        "PhysicalClass-inThesaurus->Component": {
          "source": "Thesaurus-05-13#CTGComponent_QuantumPhysicalCla",
          "name": "PhysicalClass-inThesaurus->Component",
          "colFromId": "Source",
          "neoFromLabel": "PhysicalClass",
          "neoFromId": "ID",
          "colToId": "Destination",
          "neoToLabel": "Component",
          "neoToId": "Name",
          "relationType": "inThesaurus",
          "mappingset": "ThesaurusQuantum",
          "type": "relation"
        },
        "Component-childOf->Component": {
          "source": "Thesaurus-05-13#Component-ComponentRel",
          "name": "Component-childOf->Component",
          "colFromId": "Destination",
          "neoFromLabel": "Component",
          "neoFromId": "Id",
          "colToId": "Source",
          "neoToLabel": "Component",
          "neoToId": "Id",
          "relationType": "childOf",
          "mappingset": "ThesaurusQuantum",
          "type": "relation"
        },
        "Equipment-childOf->Equipment": {
          "source": "Thesaurus-05-13#Equipment-EquipmentRel",
          "name": "Equipment-childOf->Equipment",
          "colFromId": "Destination",
          "neoFromLabel": "Equipment",
          "neoFromId": "Id",
          "colToId": "Source",
          "neoToLabel": "Equipment",
          "neoToId": "Id",
          "relationType": "childOf",
          "mappingset": "ThesaurusQuantum",
          "type": "relation"
        },
        "PhysicalClass-childOf->PhysicalClass": {
          "source": "Thesaurus-05-13#Quantum_physicalClass",
          "name": "PhysicalClass-childOf->PhysicalClass",
          "colFromId": "ID",
          "neoFromLabel": "PhysicalClass",
          "neoFromId": "ID",
          "colToId": "ParentPhysicalClassID",
          "neoToLabel": "PhysicalClass",
          "neoToId": "ID",
          "relationType": "childOf",
          "mappingset": "ThesaurusQuantum",
          "type": "relation"
        },
        "PhysicalClass-relatedTo->FunctionalClass": {
          "source": "Thesaurus-05-13#PhysicalClassToFunctionalClass",
          "name": "PhysicalClass-relatedTo->FunctionalClass",
          "colFromId": "PhysicalClassID",
          "neoFromLabel": "PhysicalClass",
          "neoFromId": "ID",
          "colToId": "FunctionalClassID",
          "neoToLabel": "FunctionalClass",
          "neoToId": "ID",
          "relationType": "relatedTo",
          "mappingset": "ThesaurusQuantum",
          "type": "relation"
        }
      }
    },
    "graphNlp": {
      "nodes": {
        "Document": {
          "colName": "Document",
          "colId": "Document",
          "exportedFields": [
            "Purpose",
            "Title"
          ],
          "label": "Document",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Document",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "Paragraph": {
          "colName": "ID",
          "colId": "ID",
          "exportedFields": [
            "ChapterTitle1",
            "ChapterTitle2",
            "ChapterTitle3",
            "Document",
            "ParagraphText",
            "StyleParagraph",
            "TextOffset"
          ],
          "label": "Paragraph",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "Equipement": {
          "colName": "Equipment",
          "colId": "Equipment",
          "exportedFields": null,
          "label": "Equipement",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Equipement",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "Phenomenon": {
          "colName": "Phenomenon",
          "colId": "Phenomenon",
          "exportedFields": null,
          "label": "Phenomenon",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Phenomenon",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "Component": {
          "colName": "Component",
          "colId": "Component",
          "exportedFields": null,
          "label": "Component",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Component",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "Characterisation": {
          "colName": "Characterisation",
          "colId": "Characterisation",
          "exportedFields": null,
          "label": "Characterisation",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Characterisation",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "Time": {
          "colName": "Time",
          "colId": "Time",
          "exportedFields": null,
          "label": "Time",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Time",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "Temperature": {
          "colName": "Temperature",
          "colId": "Temperature",
          "exportedFields": null,
          "label": "Temperature",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Temperature",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "Vibration": {
          "colName": "Vibration",
          "colId": "Vibration",
          "exportedFields": null,
          "label": "Vibration",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Vibration",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "Method": {
          "colName": "Method",
          "colId": "Method",
          "exportedFields": null,
          "label": "Method",
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Method",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        },
        "ThesaurusConcept": {
          "colName": "concept",
          "colId": "id",
          "exportedFields": [
            "ancestors",
            "parent",
            "synonyms"
          ],
          "label": "ThesaurusConcept",
          "source": "thesaurus#Feuil1",
          "name": "ThesaurusConcept",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlp"
        }
      },
      "relations": {
        "Paragraph-inDocument->Document": {
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph-inDocument->Document",
          "colFromId": "ID",
          "neoFromLabel": "Paragraph",
          "neoFromId": "ID",
          "colToId": "Document",
          "neoToLabel": "Document",
          "neoToId": "Document",
          "relationType": "inDocument",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Paragraph-hasEntity->Equipement": {
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph-hasEntity->Equipement",
          "colFromId": "ID",
          "neoFromLabel": "Paragraph",
          "neoFromId": "ID",
          "colToId": "Equipment",
          "neoToLabel": "Equipement",
          "neoToId": "Equipment",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Paragraph-hasEntity->Phenomenon": {
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph-hasEntity->Phenomenon",
          "colFromId": "ID",
          "neoFromLabel": "Paragraph",
          "neoFromId": "ID",
          "colToId": "Phenomenon",
          "neoToLabel": "Phenomenon",
          "neoToId": "Phenomenon",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Paragraph-hasEntity->Component": {
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph-hasEntity->Component",
          "colFromId": "ID",
          "neoFromLabel": "Paragraph",
          "neoFromId": "ID",
          "colToId": "Component",
          "neoToLabel": "Component",
          "neoToId": "Component",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Paragraph-hasEntity->Characterisation": {
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph-hasEntity->Characterisation",
          "colFromId": "ID",
          "neoFromLabel": "Paragraph",
          "neoFromId": "ID",
          "colToId": "Characterisation",
          "neoToLabel": "Characterisation",
          "neoToId": "Characterisation",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Paragraph-hasEntity->Time": {
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph-hasEntity->Time",
          "colFromId": "ID",
          "neoFromLabel": "Paragraph",
          "neoFromId": "ID",
          "colToId": "Time",
          "neoToLabel": "Time",
          "neoToId": "Time",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Paragraph-hasEntity->Temperature": {
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph-hasEntity->Temperature",
          "colFromId": "ID",
          "neoFromLabel": "Paragraph",
          "neoFromId": "ID",
          "colToId": "Temperature",
          "neoToLabel": "Temperature",
          "neoToId": "Temperature",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Paragraph-hasEntity->Vibration": {
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph-hasEntity->Vibration",
          "colFromId": "ID",
          "neoFromLabel": "Paragraph",
          "neoFromId": "ID",
          "colToId": "Vibration",
          "neoToLabel": "Vibration",
          "neoToId": "Vibration",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Paragraph-hasEntity->Method": {
          "source": "export_doc_chapter_neo#Sheet1",
          "name": "Paragraph-hasEntity->Method",
          "colFromId": "ID",
          "neoFromLabel": "Paragraph",
          "neoFromId": "ID",
          "colToId": "Method",
          "neoToLabel": "Method",
          "neoToId": "Method",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "ThesaurusConcept-childConceptOf->ThesaurusConcept": {
          "source": "thesaurus#Feuil1",
          "name": "ThesaurusConcept-childConceptOf->ThesaurusConcept",
          "colFromId": "id",
          "neoFromLabel": "ThesaurusConcept",
          "neoFromId": "id",
          "colToId": "parent",
          "neoToLabel": "ThesaurusConcept",
          "neoToId": "id",
          "relationType": "childConceptOf",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Component-instanceOf->ThesaurusConcept": {
          "source": "thesaurus#Feuil1",
          "name": "Component-instanceOf->ThesaurusConcept",
          "colFromId": "synonyms",
          "neoFromLabel": "Characterisation",
          "neoFromId": "Characterisation",
          "colToId": "concept",
          "neoToLabel": "ThesaurusConcept",
          "neoToId": "concept",
          "relationType": "instanceOf",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Characterisation-instanceOf->ThesaurusConcept": {
          "source": "thesaurus#Feuil1",
          "name": "Characterisation-instanceOf->ThesaurusConcept",
          "colFromId": "synonyms",
          "neoFromLabel": "Characterisation",
          "neoFromId": "Characterisation",
          "colToId": "concept",
          "neoToLabel": "ThesaurusConcept",
          "neoToId": "concept",
          "relationType": "instanceOf",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Method-instanceOf->ThesaurusConcept": {
          "source": "thesaurus#Feuil1",
          "name": "Method-instanceOf->ThesaurusConcept",
          "colFromId": "synonyms",
          "neoFromLabel": "Method",
          "neoFromId": "Method",
          "colToId": "concept",
          "neoToLabel": "ThesaurusConcept",
          "neoToId": "concept",
          "relationType": "instanceOf",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Phenomenon-instanceOf->ThesaurusConcept": {
          "source": "thesaurus#Feuil1",
          "name": "Phenomenon-instanceOf->ThesaurusConcept",
          "colFromId": "synonyms",
          "neoFromLabel": "Phenomenon",
          "neoFromId": "Phenomenon",
          "colToId": "concept",
          "neoToLabel": "ThesaurusConcept",
          "neoToId": "concept",
          "relationType": "instanceOf",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Equipement-instanceOf->ThesaurusConcept": {
          "source": "thesaurus#Feuil1",
          "name": "Equipement-instanceOf->ThesaurusConcept",
          "colFromId": "synonyms",
          "neoFromLabel": "Equipement",
          "neoFromId": "Equipment",
          "colToId": "concept",
          "neoToLabel": "ThesaurusConcept",
          "neoToId": "concept",
          "relationType": "instanceOf",
          "mappingset": "graphNlp",
          "type": "relation"
        }
      }
    },
    "graphNlpQuestions": {
      "nodes": {
        "Question": {
          "colName": "Question",
          "colId": "ID",
          "exportedFields": [
            "Doc",
            "Expected_Answer",
            "NLP_Question",
            "Paragraph",
            "Question",
            "Question_Noun",
            "Question_Noun_Wordnet",
            "Question_Other_Words",
            "Question_Type",
            "Question_Verb",
            "Question_Verb_Wordnet",
            "Resultat",
            "Type_reponse"
          ],
          "label": "Question",
          "source": "export_mec_question (1)#Sheet1",
          "name": "Question",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlpQuestions"
        },
        "Characterisation": {
          "colName": "Characterisation",
          "colId": "Characterisation",
          "exportedFields": null,
          "label": "Characterisation",
          "source": "export_mec_question#Sheet1",
          "name": "Characterisation",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlpQuestions"
        },
        "Words": {
          "colName": "Question_Other_Words",
          "colId": "Question_Other_Words",
          "exportedFields": null,
          "label": "Words",
          "source": "export_mec_question#Sheet1",
          "name": "Words",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlpQuestions"
        },
        "Question_Noun": {
          "colName": "Question_Noun",
          "colId": "Question_Noun",
          "exportedFields": null,
          "label": "Question_Noun",
          "source": "export_mec_question (1)#Sheet1",
          "name": "Question_Noun",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlpQuestions"
        },
        "Question_Verb": {
          "colName": "Question_Verb",
          "colId": "Question_Verb",
          "exportedFields": null,
          "label": "Question_Verb",
          "source": "export_mec_question (1)#Sheet1",
          "name": "Question_Verb",
          "distinctValues": "on",
          "type": "node",
          "mappingset": "graphNlpQuestions"
        }
      },
      "relations": {
        "Question-hasWord->Words": {
          "source": "export_mec_question#Sheet1",
          "name": "Question-hasWord->Words",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Question_Other_Words",
          "neoToLabel": "Words",
          "neoToId": "Question_Other_Words",
          "relationType": "hasWord",
          "mappingset": "graphNlpQuestions",
          "type": "relation"
        },
        "Question-hasEntity->Characterisation": {
          "source": "export_mec_question#Sheet1",
          "name": "Question-hasEntity->Characterisation",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Characterisation",
          "neoToLabel": "Characterisation",
          "neoToId": "Characterisation",
          "relationType": "hasEntity",
          "mappingset": "graphNlpQuestions",
          "type": "relation"
        },
        "Question-hasEntity->Equipement": {
          "source": "export_mec_question#Sheet1",
          "name": "Question-hasEntity->Equipement",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Equipment",
          "neoToLabel": "Equipement",
          "neoToId": "Equipment",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Question-hasEntity->Phenomenon": {
          "source": "export_mec_question#Sheet1",
          "name": "Question-hasEntity->Phenomenon",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Phenomenon",
          "neoToLabel": "Phenomenon",
          "neoToId": "Phenomenon",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Question-hasEntity->Component": {
          "source": "export_mec_question#Sheet1",
          "name": "Question-hasEntity->Component",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Component",
          "neoToLabel": "Component",
          "neoToId": "Component",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Question-hasEntity->Time": {
          "source": "export_mec_question#Sheet1",
          "name": "Question-hasEntity->Time",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Time",
          "neoToLabel": "Time",
          "neoToId": "Time",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Question-hasEntity->Temperature": {
          "source": "export_mec_question#Sheet1",
          "name": "Question-hasEntity->Temperature",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Temperature",
          "neoToLabel": "Temperature",
          "neoToId": "Temperature",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Question-hasEntity->Vibration": {
          "source": "export_mec_question#Sheet1",
          "name": "Question-hasEntity->Vibration",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Vibration",
          "neoToLabel": "Vibration",
          "neoToId": "Vibration",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Question-hasEntity->Method": {
          "source": "export_mec_question#Sheet1",
          "name": "Question-hasEntity->Method",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Method",
          "neoToLabel": "Method",
          "neoToId": "Method",
          "relationType": "hasEntity",
          "mappingset": "graphNlp",
          "type": "relation"
        },
        "Question-hasNoun->Question_Noun": {
          "source": "export_mec_question (1)#Sheet1",
          "name": "Question-hasNoun->Question_Noun",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Question_Noun",
          "neoToLabel": "Question_Noun",
          "neoToId": "Question_Noun",
          "relationType": "hasNoun",
          "mappingset": "graphNlpQuestions",
          "type": "relation"
        },
        "Question-hasVerb->Question_Verb": {
          "source": "export_mec_question (1)#Sheet1",
          "name": "Question-hasVerb->Question_Verb",
          "colFromId": "ID",
          "neoFromLabel": "Question",
          "neoFromId": "ID",
          "colToId": "Question_Verb",
          "neoToLabel": "Question_Verb",
          "neoToId": "Question_Verb",
          "relationType": "hasVerb",
          "mappingset": "graphNlpQuestions",
          "type": "relation"
        }
      }
    }
  }
}